/* LEFT JOIN */
/* --------- */
SELECT * 
FROM PETS
LEFT JOIN OWNERS
ON PETS.OWNERID = OWNERS.OWNERID;

SELECT PETS.NAME, OWNERS.NAME
FROM PETS
LEFT JOIN OWNERS
ON PETS.OWNERID = OWNERS.OWNERID;

/* TIPS AND TRICKS */
/* --------------- */
-- Aliases for tables
SELECT A.NAME, B.NAME 
FROM PETS AS A
LEFT JOIN OWNERS AS B
ON A.OWNERID = B.OWNERID
WHERE LEFT(A.NAME, 1) = LEFT(B.NAME, 1);

-- Aliases for columns
SELECT A.NAME AS PETNAME, B.NAME AS OWNERNAME
FROM PETS AS A
LEFT JOIN OWNERS AS B
ON A.OWNERID = B.OWNERID
WHERE LEFT(A.NAME, 1) = LEFT(B.NAME, 1);

/* RIGHT JOIN */
/* ---------- */
SELECT B.NAME AS PETNAME, A.NAME AS OWNERNAME
FROM OWNERS AS A
RIGHT JOIN PETS AS B
ON A.OWNERID = B.OWNERID;

/* INNER JOIN */
/* ---------- */
SELECT *
FROM PETS AS A
INNER JOIN PROCEDUREHISTORY AS B
ON A.PETID = B.PETID;

/* FULL OUTER JOIN */
/* --------------- */
SELECT *
FROM PETS AS A
FULL OUTER JOIN PROCEDUREHISTORY AS B
ON A.PETID = B.PETID;

/* JOINING ON MULTIPLE FIELDS */
/* -------------------------- */
SELECT *
FROM PROCEDUREHISTORY AS A
LEFT JOIN PROCEDUREDETAILS AS B
ON A.PROCEDURETYPE = B.PROCEDURETYPE
AND A.PROCEDURESUBCODE = B.PROCEDURESUBCODE;

/* COMPLEX JOINS */
/* ------------- */
SELECT *
FROM PETS AS A
LEFT JOIN PROCEDUREHISTORY AS B
ON A.PETID = B.PETID
LEFT JOIN PROCEDUREDETAILS AS C
ON B.PROCEDURETYPE = C.PROCEDURETYPE
AND B.PROCEDURESUBCODE = C.PROCEDURESUBCODE;

/* CLEANING UP JOINS */
/* ----------------- */
SELECT  --A.PETID,
-- 		A.NAME,
-- 		A.KIND,
-- 		A.GENDER,
-- 		A.AGE,
		A.OWNERID,
-- 		B.PROCEDUREDATE,
-- 		B.PROCEDURETYPE,
-- 		B.PROCEDURESUBCODE,
-- 		C.DESCRIPTION,
		C.PRICE
FROM PETS AS A
INNER JOIN PROCEDUREHISTORY AS B
ON A.PETID = B.PETID
LEFT JOIN PROCEDUREDETAILS AS C
ON B.PROCEDURETYPE = C.PROCEDURETYPE
AND B.PROCEDURESUBCODE = C.PROCEDURESUBCODE;

/* CROSS JOINS */
/* ----------- */
SELECT * 
FROM PETS
CROSS JOIN OWNERS;





